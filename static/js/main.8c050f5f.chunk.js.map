{"version":3,"sources":["components/menu/baseStyles.js","components/menu/menuIcon.js","components/menu/closeIcon.js","components/menu/menu.js","components/dropdown.js","components/signup-form.js","App.js","reportWebVitals.js","index.js"],"names":["styles","overlay","isOpen","position","zIndex","width","height","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","right","menu","boxSizing","overflow","itemList","item","display","outline","menuIcon","MenuIcon","props","state","hover","index","left","top","this","icon","customIcon","extraProps","className","style","mIcon","React","cloneElement","map","bar","barClassName","getLineStyle","mMenuBars","onClick","onMouseOver","setState","onMouseOut","backgroundColor","margin","padding","border","fontSize","cursor","Component","defaultProps","CloseIcon","type","mClose","i","closeClassName","getCloseStyle","mCloseButton","textIndent","Menu","options","noStateChange","newState","onStateChange","el","inline","propName","replace","charAt","toUpperCase","output","baseStyles","getStyle","e","window","event","key","keyCode","toggleMenu","disableOverlayClick","onkeydown","listenForClose","bind","nextProps","overlayClassName","shouldDisableOverlayClick","getStyles","id","menuClassName","itemListClassName","Children","children","closeButtonClassName","menuButtonClassName","menuBarClassName","bodyClassName","noOverlay","Dropdown","activatorText","items","useState","setIsOpen","activatorRef","useRef","dropdownListRef","clickOutsideHandler","current","contains","target","useEffect","document","addEventListener","length","querySelector","focus","removeEventListener","onKeyUp","aria-haspopup","aria-controls","ref","data-testid","aria-hidden","version","xmlns","x","y","viewBox","focusable","d","tabIndex","role","href","url","text","SignupForm","action","autoComplete","placeholder","name","htmlFor","enableBackground","App","modalOpen","menuOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c050f5f.chunk.js","sourcesContent":["\nlet styles = {\n\n  overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 2,\n      width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  },\n\n  menuIcon(isOpen, width, right) {\n    return {}\n  },\n\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MenuIcon extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  getLineStyle(index) {\n    return {\n      position: 'absolute',\n      height: '20%',\n      left: 0,\n      right: 0,\n      top: 20 * (index * 2) + '%',\n      opacity: this.state.hover ? 0.6 : 1\n    };\n  }\n\n  render() {\n    let icon;\n    let buttonStyle = {\n      backgroundColor: 'transparent',\n      margin: 0,\n      padding: 0,\n      border: 'none',\n      fontSize: 8,\n      cursor: 'pointer'\n    };\n\n    if (this.props.customIcon) {\n      let extraProps = {\n        className: 'm-icon',\n        style: {...{width: '100%', height: '100%'}, ...this.props.styles.mIcon}\n      };\n      icon = React.cloneElement(this.props.customIcon, extraProps);\n    } else {\n      icon = (\n        <span>\n          {[0, 1, 2].map((bar) => (\n            <span\n              key={bar}\n              className={`m-menu-bars ${this.props.barClassName}`}\n              style={{...this.getLineStyle(bar), ...this.props.styles.mMenuBars}}\n            />\n          ))}\n        </span>\n      );\n    }\n\n    return (\n      <div\n        onClick={this.props.onClick}\n        onMouseOver={() => this.setState({hover: true})}\n        onMouseOut={() => this.setState({hover: false})}\n        className={`m-menu-button ${this.props.className}`}\n        style={buttonStyle}\n        >\n        {icon}\n      </div>\n    );\n  }\n}\n\nMenuIcon.propTypes = {\n  barClassName: PropTypes.string,\n  styles: PropTypes.object\n};\n\nMenuIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CloseIcon extends Component {\n  getCloseStyle(type) {\n    return {\n      position: 'absolute',\n      width: 3,\n      height: 14,\n      transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n    };\n  }\n\n  render() {\n    var icon;\n    var buttonWrapperStyle = {\n      position: 'absolute',\n      width: 24,\n      height: 24,\n      right: 8,\n      top: 8\n    };\n    var buttonStyle = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      padding: 0,\n      border: 'none',\n      textIndent: -9999,\n      background: 'transparent',\n      cursor: 'pointer'\n    };\n\n    if (this.props.customIcon) {\n      let extraProps = {\n        className: 'm-close',\n        style: {...{width: '100%', height: '100%'}, ...this.props.styles.mClose}\n      };\n      icon = React.cloneElement(this.props.customIcon, extraProps);\n    } else {\n      icon = (\n        <span style={{position: 'absolute', top: '6px', right: '14px'}}>\n          {['before', 'after'].map((type, i) => (\n            <span\n              key={i}\n              className={`m-close ${this.props.closeClassName}`}\n              style={{...this.getCloseStyle(type), ...this.props.styles.mClose}}\n            />\n          ))}\n        </span>\n      );\n    }\n\n    return (\n      <div\n        className={`m-close-button ${this.props.className}`}\n        style={{...buttonWrapperStyle, ...this.props.styles.mCloseButton}}\n      >\n        {icon}\n        <div onClick={this.props.onClick} style={buttonStyle}>\n        </div>\n      </div>\n    );\n  }\n}\n\nCloseIcon.propTypes = {\n  closeClassName: PropTypes.string,\n  styles: PropTypes.object\n};\n\nCloseIcon.defaultProps = {\n  closeClassName: '',\n  className: '',\n  styles: {}\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport baseStyles from './baseStyles'\nimport MenuIcon from './menuIcon'\nimport CloseIcon from './closeIcon'\nimport './menu.css'\n\nexport default class Menu extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  toggleMenu(options = {}) {\n    const {isOpen, noStateChange} = options;\n    const newState = {\n      isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n    };\n\n    this.setState(newState, () => {\n      !noStateChange && this.props.onStateChange(newState);\n    });\n  }\n\n  // Builds styles incrementally for a given element.\n  getStyles(el, index, inline) {\n    const propName = 'm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n    // Set base styles.\n    let output = baseStyles[el] ? this.getStyle(baseStyles[el]) : {};\n\n    // Add custom styles.\n    if (this.props.styles[propName]) {\n      output = {\n        ...output,\n        ...this.props.styles[propName]\n      };\n    }\n\n    // Add element inline styles.\n    if (inline) {\n      output = {\n        ...output,\n        ...inline\n      };\n    }\n\n    return output;\n  }\n\n  getStyle(style, index) {\n    let width = this.props.width;\n    if (typeof width !== 'string') width = `${width}px`;\n\n    return style(this.state.isOpen, width, this.props.right, index);\n  }\n\n  listenForClose(e) {\n    e = e || window.event;\n\n    if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n      this.toggleMenu();\n    }\n  }\n\n  shouldDisableOverlayClick() {\n    if (typeof this.props.disableOverlayClick === 'function') {\n      return this.props.disableOverlayClick();\n    } else {\n      return this.props.disableOverlayClick;\n    }\n  }\n\n  componentDidMount() {\n    window.onkeydown = this.listenForClose.bind(this);\n\n    // Allow initial open state to be set by props.\n    if (this.props.isOpen) {\n      this.toggleMenu({isOpen: true, noStateChange: true});\n    }\n  }\n\n  componentWillUnmount() {\n    window.onkeydown = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n      this.toggleMenu();\n    }\n  }\n\n  render() {\n    return (\n      <div className={`menu ${ this.props.className}`}>\n        <div\n          className={`m-overlay ${this.props.overlayClassName}`}\n          onClick={() => !this.shouldDisableOverlayClick() && this.toggleMenu()}\n          style={this.getStyles('overlay')}\n        />\n        <div\n          id={this.props.id}\n          className={`m-menu-wrap ${this.props.className}`}\n          style={this.getStyles('menuWrap')}\n        >\n          <div className={`m-menu ${this.props.menuClassName}`} style={this.getStyles('menu')} >\n            <nav className={`m-item-list ${this.props.itemListClassName}`}>\n              {React.Children.map(this.props.children, (item, index) => {\n                if (item) {\n                  return React.cloneElement(item, {key: index});\n                }\n              })}\n            </nav>\n          </div>\n          <CloseIcon\n            onClick={() => this.toggleMenu()}\n            className={this.props.closeButtonClassName}\n            closeClassName={this.props.closeClassName}\n          />\n        </div>\n        <MenuIcon\n          onClick={() => this.toggleMenu()}\n          className={this.props.menuButtonClassName}\n          barClassName={this.props.menuBarClassName}\n        />\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  bodyClassName: PropTypes.string,\n  menuBarClassName: PropTypes.string,\n  menuButtonClassName: PropTypes.string,\n  closeButtonClassName: PropTypes.string,\n  closeClassName: PropTypes.string,\n  disableOverlayClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  id: PropTypes.string,\n  isOpen: PropTypes.bool,\n  itemListClassName: PropTypes.string,\n  menuClassName: PropTypes.string,\n  noOverlay: PropTypes.bool,\n  onStateChange: PropTypes.func,\n  right: PropTypes.bool,\n  styles: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nMenu.defaultProps = {\n  bodyClassName: '',\n  menuBarClassName: '',\n  menuButtonClassName: '',\n  className: '',\n  closeButtonClassName: '',\n  closeClassName: '',\n  id: '',\n  itemListClassName: '',\n  menuClassName: '',\n  noOverlay: false,\n  onStateChange: () => {},\n  overlayClassName: '',\n  styles: {},\n  width: 300\n};\n","import { useState, useRef, useEffect } from \"react\"\n\nimport \"./dropdown.scss\"\n\nconst Dropdown = ({ activatorText = 'Dropdown', items = [] }) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const activatorRef = useRef(null)\n    const dropdownListRef = useRef(null)\n\n    const clickHandler = () => {\n        setIsOpen(!isOpen)\n    }\n    const wrapKeyHandler = (event) => {\n        if (event.key === 'Escape' && isOpen) {\n            // escape key\n            setIsOpen(false)\n            activatorRef.current.focus()\n        }\n    }\n    const clickOutsideHandler = (event) => {\n        if (dropdownListRef.current.contains(event.target) || activatorRef.current.contains(event.target)) {\n            return\n        }\n        setIsOpen()\n    }\n    useEffect(() => {\n        if (isOpen) {\n            document.addEventListener('mouseup', clickOutsideHandler)\n\n            if (items.length) {\n                dropdownListRef.current.querySelector('a').focus()\n            }\n        } else {\n            document.removeEventListener('mouseup', clickOutsideHandler)\n        }\n\n        return () => {\n            document.removeEventListener('mouseup', clickOutsideHandler)\n        }\n    }, [isOpen])\n    return (\n        <div\n            onKeyUp={wrapKeyHandler}\n            className={`dropdown ${isOpen ? 'active' : ''}`}\n        >\n            <button\n                aria-haspopup=\"true\"\n                aria-controls=\"dropdown1\"\n                onClick={clickHandler}\n                className=\"dropdown-activator\"\n                ref={activatorRef}\n                data-testid=\"dropdown-activator\"\n            >\n                {activatorText}\n                <span className=\"icon\" aria-hidden=\"true\">\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 55.751 55.751\" focusable=\"false\">\n                        <g>\n                            <path d=\"M31.836,43.006c0.282-0.281,0.518-0.59,0.725-0.912L54.17,20.485c2.107-2.109,2.109-5.528,0-7.638\n                            c-2.109-2.107-5.527-2.109-7.638,0l-18.608,18.61L9.217,12.753c-2.109-2.108-5.527-2.109-7.637,0\n                            C0.527,13.809-0.002,15.19,0,16.571c-0.002,1.382,0.527,2.764,1.582,3.816l21.703,21.706c0.207,0.323,0.445,0.631,0.729,0.913\n                            c1.078,1.078,2.496,1.597,3.91,1.572C29.336,44.604,30.758,44.084,31.836,43.006z\" />\n                        </g>\n                    </svg>\n                </span>\n            </button>\n            <ul\n                className=\"dropdown-list\"\n                id=\"dropdown1\"\n                ref={dropdownListRef}\n                tabIndex=\"-1\"\n                role=\"list\"\n                data-testid=\"dropdown-list\"\n            >\n                {items.map((item, index) => {\n                    return <li key={index} role=\"listitem\">\n                        <a href={item.url}>\n                            {item.text}\n                        </a>\n                    </li>\n                })}\n                { items.length === 0 ? <li>No items</li> : null }\n            </ul>\n        </div>\n    )\n}\nexport default Dropdown\n","import './signup-form.scss'\n\nconst SignupForm = () => {\n  const onSubmitBtnClick = () => {\n    return false;\n  }\n  return (\n    <form className=\"signup\" action=\"\" autoComplete=\"off\">\n      <h1>Newsletter Sign Up</h1>\n      <div className=\"floating-label\">\n        <input placeholder=\"Email\" type=\"email\" name=\"email\" id=\"email\" autoComplete=\"off\" />\n        <label htmlFor=\"email\">Email:</label>\n        <div className=\"icon icon-mail\">\n          <svg enableBackground=\"new 0 0 100 100\" version=\"1.1\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g transform=\"translate(0 -952.36)\">\n              <path d=\"m17.5 977c-1.3 0-2.4 1.1-2.4 2.4v45.9c0 1.3 1.1 2.4 2.4 2.4h64.9c1.3 0 2.4-1.1 2.4-2.4v-45.9c0-1.3-1.1-2.4-2.4-2.4h-64.9zm2.4 4.8h60.2v1.2l-30.1 22-30.1-22v-1.2zm0 7l28.7 21c0.8 0.6 2 0.6 2.8 0l28.7-21v34.1h-60.2v-34.1z\"/>\n            </g>\n            <rect className=\"st0\" width=\"100\" height=\"100\" />\n          </svg>\n        </div>\n      </div>\n        <div className=\"floating-label\">\n          <input placeholder=\"Password\" type=\"password\" name=\"password\" id=\"password\" autoComplete=\"off\" />\n          <label htmlFor=\"password\">Password:</label>\n          <div className=\"icon icon-lock\">\n            <svg enableBackground=\"new 0 0 24 24\" version=\"1.1\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect className=\"st0\" width=\"24\" height=\"24\"/>\n                <path className=\"st1\" d=\"M19,21H5V9h14V21z M6,20h12V10H6V20z\"/>\n                <path className=\"st1\" d=\"M16.5,10h-1V7c0-1.9-1.6-3.5-3.5-3.5S8.5,5.1,8.5,7v3h-1V7c0-2.5,2-4.5,4.5-4.5s4.5,2,4.5,4.5V10z\"/>\n                <path className=\"st1\" d=\"m12 16.5c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5zm0-2c-0.3 0-0.5 0.2-0.5 0.5s0.2 0.5 0.5 0.5 0.5-0.2 0.5-0.5-0.2-0.5-0.5-0.5z\"/>\n              </svg>\n          </div>\n        </div>\n        <button type=\"submit\" onClick={onSubmitBtnClick}>Log in</button>\n    </form>\n  )\n}\nexport default SignupForm\n","// import Modal from \"react-modal\"\nimport { useState } from \"react\"\nimport './App.css'\nimport Menu from \"./components/menu/menu\"\nimport Dropdown from './components/dropdown'\nimport SignupForm from './components/signup-form'\n\nfunction App() {\n  const [state, setState] = useState({ modalOpen: false, menuOpen: false })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Menu\n          className=\"App-menu\"\n          isOpen={state.menuOpen}>\n          <ul>\n              <li><a href=\"#\">\n                  <i className=\"fa fa-fw fa-home\" />\n                  <span>Home</span>\n              </a></li>\n              <li><a href=\"#\">\n                  <i className=\"fa fa-fw fa-star\" />\n                  <span>Dog Videos</span>\n              </a></li>\n              <li><a href=\"#\">\n                  <i className=\"fa fa-fw fa-suitcase\" />\n                  <span>Cat Videos</span>\n              </a></li>\n              <li><a href=\"#\">\n                  <i className=\"fa fa-fw fa-question-circle\" />\n                  <span>Mini Horse Videos</span>\n              </a></li>\n            </ul>\n          </Menu>\n          <div className=\"App-header-title\">\n            <h1>Accessibility Testing Sandbox</h1>\n          </div>\n        </header>\n      <main>\n        <section className=\"App-col-primary\">\n          <SignupForm />\n        </section>\n        <section className=\"App-col-secondary\">\n          <Dropdown activatorText = 'Year' items={[{\n            text: '2020',\n            url: '#'\n          },{\n            text: '2019',\n            url: '#'\n          }, {\n            text: '2018',\n            url: '#'\n          }]} />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}